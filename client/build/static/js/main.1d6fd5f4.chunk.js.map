{"version":3,"sources":["bill_file.jpg","card_file.jpg","results/Bill File updated.csv","App.js","index.js"],"names":["App","flag","useState","selectedFile","setSelectedFile","selectedFile2","setSelectedFile2","isFilePicked","setIsFilePicked","isFilePicked2","setIsFilePicked2","items","setItems","value","setValue","print","setPrint","handleSubmit","data","FormData","append","console","log","axios","post","then","res","catch","error","className","Button","variant","color","onClick","fetch","json","alert","code","href","target","src","logo1","alt","style","type","name","placeholder","onChange","e","files","logo2","onKeyPress","keyCode","window","open","text","String","bN","kN","aN","file","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","result","wb","XLSX","read","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","onerror","d","readExcel","class","scope","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d6fd5f4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bill_file.7633a66d.jpg\";","export default __webpack_public_path__ + \"static/media/card_file.84e983d2.jpg\";","export default __webpack_public_path__ + \"static/media/Bill File updated.daf21e65.csv\";","import \"./App.css\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"@material-ui/core\";\nimport logo1 from \"./bill_file.jpg\";\nimport logo2 from \"./card_file.jpg\";\nimport file from \"./results/Bill File updated.csv\";\nimport XLSX from \"xlsx\";\n\nfunction App() {\n  let flag = 0;\n  const [selectedFile, setSelectedFile] = useState();\n  const [selectedFile2, setSelectedFile2] = useState();\n  const [isFilePicked, setIsFilePicked] = useState(false);\n  const [isFilePicked2, setIsFilePicked2] = useState(false);\n  const [items, setItems] = useState([]);\n  const changeHandler = (e) => {\n    setSelectedFile(e.target.files[0]);\n    setIsFilePicked(true);\n  };\n  const changeHandler2 = (e) => {\n    setSelectedFile2(e.target.files[0]);\n    setIsFilePicked2(true);\n  };\n  const handleSubmission = () => {\n    const data = new FormData();\n    data.append(\"file\", selectedFile);\n    data.append(\"file2\", selectedFile2);\n    axios.post(\"/sendFile\", data).then((res) => {\n      alert(res.data.code);\n    });\n  };\n  const [value, setValue] = useState(null);\n  const [print, setPrint] = useState(false);\n\n  function handleChange(e) {\n    setValue(e.target.value);\n    setPrint(false);\n    flag = 0;\n  }\n\n  const handleSubmit = () => {\n    flag = 1;\n    const data = new FormData();\n    data.append(\"value\", value);\n    setPrint(true);\n    console.log(value);\n    axios\n      .post(\"/sendAppValue\", data)\n      .then((res) => {\n        // alert(res.data.code);\n        console.log(res);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    // or you can send data to backend\n  };\n\n  const handleKeyPress = (e) => {\n    // console.log(\"hello\");\n    // //it triggers by pressing the enter key\n    // console.log(e.keyCode);\n    if (e.keyCode === 13) {\n      alert(\"success\");\n      handleSubmit();\n    }\n  };\n\n  const runScript = () => {\n    if (value === null) {\n      alert(\"Total number of apps field cannot be empty\");\n      return false;\n    } else if (flag == 0) {\n      handleSubmit();\n    }\n    fetch(\"/status\")\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.value === 0) alert(data.code);\n        else {\n          fetch(\"/runScript\")\n            .then((res) => res.json())\n            .then((data) => {\n              alert(data.code);\n            });\n        }\n      });\n  };\n  const stopScript = () => {\n    fetch(\"/stopScript\")\n      .then((res) => res.json())\n      .then((data) => {\n        alert(data.code);\n      });\n  };\n  const billCheck = () => {\n    fetch(\"/status2\")\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.value === 0) alert(data.code);\n        else {\n          fetch(\"/billCheck\")\n            .then((res) => res.json())\n            .then((data) => {\n              alert(data.code);\n            });\n        }\n      });\n  };\n  const stopScript2 = () => {\n    fetch(\"/stopScript2\")\n      .then((res) => res.json())\n      .then((data) => {\n        alert(data.code);\n      });\n  };\n\n  function download() {\n    // alert(\"Hello\");\n    window.open(\"http://127.0.0.1:8887/Bill%20File%20updated.xlsx\", \"_blank\");\n  }\n\n  const getAppNo = () => {\n    fetch(\"/appNo\")\n      .then((res) => res.json())\n      .then((data) => {\n        let text =\n          \"Currently running :-\\nBiller name = \" +\n          String(data.bN) +\n          \"\\nK number = \" +\n          String(data.kN) +\n          \"\\nApp number = \" +\n          String(data.aN);\n        alert(text);\n      });\n  };\n\n  const delFile = () => {\n    fetch(\"/delFile\")\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.value === 1) {\n          alert(\"File successfully deleted\");\n        } else {\n          alert(\"No such file\");\n        }\n      });\n  };\n\n  const readExcel = (file) => {\n    const promise = new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n\n      fileReader.onload = (e) => {\n        const bufferArray = e.target.result;\n\n        const wb = XLSX.read(bufferArray, { type: \"buffer\" });\n\n        const wsname = wb.SheetNames[0];\n\n        const ws = wb.Sheets[wsname];\n\n        const data = XLSX.utils.sheet_to_json(ws);\n\n        resolve(data);\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n\n    promise.then((d) => {\n      console.log(d);\n      setItems(d);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"run\">\n        <Button variant=\"outlined\" color=\"primary\" onClick={billCheck}>\n          Bill Check\n        </Button>\n        <span> </span>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={stopScript2}>\n          Stop Bill Check\n        </Button>\n        <a href=\"http://127.0.0.1:5000/\" target=\"_blank\">\n          Bill check link\n        </a>\n      </div>\n      <div className=\"container my-4\">\n        <div className=\"row\">\n          <div className=\"col border border-secondary\">\n            <div>\n              <h5>\n                Bill excel file should have same column name as given below.\n              </h5>\n              <img src={logo1} alt=\"bill file format\"></img>\n            </div>\n            <div className=\"d-flex\">\n              <h6>\n                Select Bill Details ( Excel File (\n                <span style={{ color: \"red\" }}> .xlsx</span> format) )\n              </h6>\n              <input\n                className=\"input\"\n                type=\"file\"\n                name=\"file\"\n                placeholder=\"Bill Details (Excel File))\"\n                onChange={changeHandler}\n              />\n              {isFilePicked ? (\n                <div>\n                  <p>Filename: {selectedFile.name}</p>\n                </div>\n              ) : (\n                <p>Select a file to show details</p>\n              )}\n            </div>\n          </div>\n          <div className=\"col border border-secondary\">\n            <div>\n              <h5>\n                Card details excel file should have same column name as given\n                below.\n              </h5>\n              <img src={logo2} alt=\"Card details file format\"></img>\n              <div className=\"d-flex\">\n                <h6>\n                  {\" \"}\n                  Select Card Details ( Excel File (\n                  <span style={{ color: \"red\" }}> .xlsx</span> format) )\n                </h6>\n                <input\n                  className=\"input\"\n                  type=\"file\"\n                  name=\"file\"\n                  placeholder=\"Bill Details (Excel File))\"\n                  onChange={changeHandler2}\n                />\n                {isFilePicked2 ? (\n                  <div>\n                    <p>Filename: {selectedFile2.name}</p>\n                    {/* <p>Filetype: {selectedFile2.type}</p> */}\n                  </div>\n                ) : (\n                  <p>Select a file to show details</p>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        {selectedFile && selectedFile2 && (\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleSubmission}>\n            Upload Files\n          </Button>\n        )}\n      </div>\n\n      <p>Total number of apps in your device</p>\n      <input\n        className=\"app_no\"\n        type=\"number\"\n        placeholder=\"totalApps\"\n        onChange={handleChange}\n        onKeyPress={handleKeyPress}\n      />\n      <button onClick={handleSubmit} type=\"submit\" className=\"appbut\">\n        Submit\n      </button>\n      {print ? (\n        <p>Total number of apps in your device are {value}</p>\n      ) : (\n        <p>Please choose total number of apps</p>\n      )}\n\n      <div className=\"run\">\n        <p className=\"war\">!! Make sure to start the appium server !!</p>\n        <Button variant=\"outlined\" color=\"primary\" onClick={runScript}>\n          Run Script\n        </Button>\n        <span>&emsp;</span>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={stopScript}>\n          Stop Script\n        </Button>\n      </div>\n      <div>\n        <br></br>\n        <button className=\"del\" onClick={delFile}>\n          Delete old bill status file\n        </button>\n        <span>&emsp;</span>\n        <button variant=\"contained\" color=\"default\" onClick={download}>\n          Download Bill\n        </button>\n        <span>&emsp;</span>\n        <button variant=\"contained\" className=\"app\" onClick={getAppNo}>\n          App processing\n        </button>\n      </div>\n      {/*  */}\n      {/*  */}\n      {/*  */}\n      <div className=\"container my-4\">\n        <p>Choose an excel file and get its data </p>\n        <input\n          type=\"file\"\n          onChange={(e) => {\n            const file = e.target.files[0];\n            readExcel(file);\n          }}\n        />\n\n        <table class=\"table table-bordered border-secondary show\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Due Date</th>\n              <th scope=\"col\">Description</th>\n              <th scope=\"col\">Biller Name</th>\n              <th scope=\"col\">K Number</th>\n              <th scope=\"col\">Amount</th>\n              <th scope=\"col\">Status</th>\n              <th scope=\"col\">Reason</th>\n              <th scope=\"col\">Biller name as per bill</th>\n              <th scope=\"col\">Amount on bill</th>\n              <th scope=\"col\">Reference no.</th>\n              <th scope=\"col\">App number</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((d) => (\n              <tr key={d[\"Due Date\"]}>\n                <th>{d[\"Due Date\"]}</th>\n                <td>{d[\"Description\"]}</td>\n                <td>{d[\"Biller Name\"]}</td>\n                <td>{d[\"K Number\"]}</td>\n                <td>{d[\"Amount\"]}</td>\n                <td>{d[\"Status\"]}</td>\n                <td>{d[\"Reason\"]}</td>\n                <td>{d[\"Biller name on bill\"]}</td>\n                <td>{d[\"Amount on bill\"]}</td>\n                <td>{d[\"Reference no.\"]}</td>\n                <td>{d[\"App no.\"]}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}